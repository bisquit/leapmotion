/*  * ゲームのエントリーポイント  * 全体で共通の処理とリープの起動を行う  */package core{	import flash.display.Sprite;	import flash.events.Event;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import leap.LeapSystem;	import flash.display.Bitmap;	import objects.Player;		[SWF(width = 1000, height = 750, frameRate = "60", backgroundColor = "#000000")]	public class Entry extends Sprite {				public function Entry() {			/* ステージのセットアップ */			if(!stage){				addEventListener(Event.ADDED_TO_STAGE, init);			} else {				init();			}		}				private function init(e:Event = null):void {						if(e !== null){				removeEventListener(Event.ADDED_TO_STAGE, init);			}						stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;						// オブジェクトのセットアップ			new Mediator(stage);						// リープモーションのセットアップ(プレイヤーへのアクセスが必要のため、この位置)			LeapSystem.setup(stage);						// 次のフェイズへ進む			new PhaseManager();						// ゲーム画面の組み立て			//createGameScreen();						// Mediatorにステージを登録			//Mediator.registerStage(stage);						// Starling 開始			//new Starling_test02(stage);						// Leap motion セットアップ			//mLeap = new LeapInit(stage);					}				/* 初期設定およびゲーム全体で共通する部品の設定 */		/*private function setupScreen():void {						var player:Player = new Player();			Mediator.registerObject("player", player);		}*/				/*private function createGameScreen():void {						var score:ScoreField = new ScoreField();			addChild(score);			score.x = stage.stageWidth - score.width;			score.y = 50;			Mediator.registerObject("score", score);						var timer:TimerField = new TimerField();			addChild(timer);			timer.x = stage.stageWidth / 2 - timer.width / 2;			timer.y = 50;			Mediator.registerObject("timer", timer);						var start:StartField = new StartField();			addChild(start);			start.x = stage.stageWidth / 2 - start.width / 2;			start.y = stage.stageHeight / 2 - start.height / 2;			Mediator.registerObject("start", start);						var end:EndField = new EndField();			addChild(end);			end.x = stage.stageWidth / 2 - end.width / 2;			end.y = stage.stageHeight / 2 - end.height / 2;			end.visible = false;			Mediator.registerObject("end", end);						var player:Player = new Player();			addChild(player);			Mediator.registerObject("player", player);		}*/	}}
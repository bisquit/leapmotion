package  leap{	import com.leapmotion.leap.Controller;	import com.leapmotion.leap.events.LeapEvent;	import flash.display.Sprite;	import com.leapmotion.leap.Hand;	import objects.Player;	import flash.display.Stage;	import core.Mediator;	import objects.ScoreField;		public class LeapInit extends Sprite{		private var controller:Controller;				private var catchReady:Boolean; // 手のひらが開いているかどうか				private var _stage:Stage;		private var stageWidth:Number;		private var stageHeight:Number;		private var xScale:Number; // リープ仮想スクリーンと現実のスクリーンとの横比率		private var yScale:Number; // リープ仮想スクリーンと現実のスクリーンとの縦比率				private var player:Player;		private var playerWidth:Number;		private var playerHeight:Number;		private var score:ScoreField;				public function LeapInit(s:Stage) {						_stage = s;			stageWidth = _stage.stageWidth;			stageHeight = _stage.stageHeight;			xScale = LeapScreen.xScale(stageWidth);			yScale = LeapScreen.yScale(stageHeight);						player = Mediator.player;			playerWidth = player.width;			playerHeight = player.height;			catchReady = false;						// リープ起動			controller = new Controller();			controller.addEventListener(LeapEvent.LEAPMOTION_CONNECTED, onLeapConnect);		}				private function onLeapConnect(e:LeapEvent):void{						controller.addEventListener(LeapEvent.LEAPMOTION_FRAME, onLeapFrame);		}				private function onLeapFrame(e:LeapEvent):void{						var hands:Vector.<Hand> = e.frame.hands;			if(hands.length > 0){								var hand:Hand = hands[0];								// 一定の閾値を超えたら除外				if(hand.palmPosition.z > 300 || hand.palmPosition.z < -300 ||				   hand.palmPosition.x > LeapScreen.halfWidth + LeapScreen.margin ||				   hand.palmPosition.x < -LeapScreen.halfWidth - LeapScreen.margin ||				   hand.palmPosition.y > LeapScreen.top + LeapScreen.margin ||				   hand.palmPosition.y < LeapScreen.bottom - LeapScreen.margin){					catchReady = false;					return;				}								// 一定の回転によっても除外				if(hand.palmNormal.y > - 0.7){					catchReady = false;					return;				}									// 手が開かれていない時				if( !catchReady ){					// 指を４本以上認識したら手が開いた状態と評価する					if(hand.fingers.length >= 4){						catchReady = true;					}									// 手が開かれた時				}else if( catchReady ){										// 指が１本以下になったら手を握った状態と評価する					if(hand.fingers.length <= 1){						catchReady = false;						trace("catch");												// さらに衝突発生時であれば、星をキャッチしたと判定						if(Mediator.isCollide){							Mediator.collideStar.delete_flag = true;							Mediator.endCollision();							Mediator.changeScore();						}					}				}												// 座標の更新				Mediator.Sx =  hand.palmPosition.x * xScale  +  stageWidth / 2;				if(Mediator.Sx > stageWidth - playerWidth / 2){					Mediator.Sx = stageWidth - playerWidth / 2;				}else if(Mediator.Sx < playerWidth /2){					Mediator.Sx = playerWidth /2;				}								Mediator.Sy = stageHeight  -  ( hand.palmPosition.y - LeapScreen.bottom ) * yScale;				if(Mediator.Sy > stageHeight - playerHeight / 2){					Mediator.Sy = stageHeight - playerHeight / 2;				}else if(Mediator.Sy < playerHeight / 2){					Mediator.Sy = playerHeight / 2;				}							} // if ( hands.length > 0 )					} // onLeapFrame	}	}
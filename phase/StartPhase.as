package  phase {	import flash.display.Sprite;	import flash.display.Bitmap;	import core.Mediator;	import flash.utils.setTimeout;	import core.PhaseManager;	//import a24.tween.Tween24;		public class StartPhase extends Sprite implements IPhase{				private var container:Sprite;				[Embed(source="../assets/images/manual.png")]		private var ManualImg:Class;		public function StartPhase() {			container = new Sprite;						var manual = new ManualImg();			manual.scaleX = manual.scaleY = 0.8;			manual.x = - manual.width/2;			manual.y = -manual.height/2;			container.addChild(manual);						container.x = Mediator.stageWidth/2;			container.y = Mediator.stageHeight/2;			addChild(container);		}				public function start():void {			trace("start start");			Mediator._stage.addChild(this);						/*Tween24.serial(				Tween24.prop(container).fadeOut().$y(200),				Tween24.parallel(					Tween24.tween(container, 2, Tween24.ease.BackOut).fadeIn(),					Tween24.tween(container, 0.5, Tween24.ease.BackOut).$y(0)				)			).play();*/						setTimeout(nextPhase, 3000);		}				private function nextPhase():void {			/*Tween24.serial(				Tween24.parallel(					Tween24.tween(container, 0.8, Tween24.ease.BackIn).fadeOut(),					Tween24.tween(container, 0.8, Tween24.ease.BackIn).$y(500)				)			).onComplete(PhaseManager.nextPhase).play();*/		}				public function destroy():void {			trace("start destroy");			Mediator._stage.removeChild(this);		}	}	}
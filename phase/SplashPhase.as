package  phase {	import flash.display.Sprite;	import flash.display.Bitmap;	import core.Mediator;	import flash.utils.setTimeout;	import core.PhaseManager;	import flash.events.Event;	import leap.HandState;	import objects.Logo;	import a24.tween.Tween24;		public class SplashPhase extends Sprite implements IPhase{				private var logo:Logo;		private var black_screen:Sprite;				[Embed(source="../assets/images/nigitte-blue.png")]		private var NigitteImage:Class;		[Embed(source="../assets/images/icon-open.png")]		private var IconOpenImage:Class;		[Embed(source="../assets/images/icon-close.png")]		private var IconCloseImage:Class;				public function SplashPhase() {					    logo = new Logo();			logo.x = Mediator.stageWidth/2;			logo.y = Mediator.stageHeight/2;			addChild(logo);						var txt_start:Bitmap = new NigitteImage();			txt_start.scaleX = txt_start.scaleY = 0.5;			txt_start.x = Mediator.stageWidth/2 - txt_start.width/2 + 150;			txt_start.y = Mediator.stageHeight/2 - txt_start.height/2 + logo.height/1.5;			addChild(txt_start);						var icon_open:Bitmap = new IconOpenImage();			icon_open.scaleX = icon_open.scaleY = 0.5;			icon_open.x = Mediator.stageWidth/2 + 160 + txt_start.width/2;			icon_open.y = Mediator.stageHeight/2 - icon_open.height/2 + logo.height/1.5;			addChild(icon_open);						var icon_close:Bitmap = new IconCloseImage();			icon_close.scaleX = icon_close.scaleY = 0.5;			icon_close.x = Mediator.stageWidth/2 + 160 + txt_start.width/2;			icon_close.y = Mediator.stageHeight/2 - icon_close.height/2 + logo.height/1.5;			addChild(icon_close);					}				public function start():void {			trace("splash start");			Mediator._stage.addChild(this);			Mediator._player.visible = false;			Mediator._stage.addChild(Mediator._player);			Mediator._stage.addChild(Mediator._black);						Mediator._black.fadeLight();			Mediator.currentPhase = "splash";						Mediator._stage.addEventListener(Event.ENTER_FRAME, Mediator.update);						/* タイトルロゴも掴める対象にする */			Mediator.debArr.push(logo);		}				public function afterCatch():void {			/*Tween24.serial(				Tween24.tween(black_screen, 0.1).alpha(0.1),				Tween24.tween(black_screen, 0.7, Tween24.ease.BackIn).alpha(1)			).onComplete(PhaseManager.nextPhase).play();*/			Mediator._black.fadeDark(PhaseManager.nextPhase);		}				public function destroy():void {			trace("splash destroy");			Mediator._stage.removeChild(this);		}	}	}
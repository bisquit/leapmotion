package  objects {	import flash.display.Sprite;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.text.TextFieldType;	import a24.tween.Tween24;	import flash.events.Event;		public class PopupText extends Sprite{				private var popup_text:TextField;		private var tf:TextFormat;		private var colors:Array = [			0xb4e2da, 0x84fe2a, 0x2aa7fe, 0xe85780	    ];				public function PopupText(txt:String, size:int, colorIdx:int = 0, useDefault:Boolean = false) {						popup_text = new TextField();			var myFont:Shinagino = new Shinagino();			var color:uint;			if(colorIdx > 3){				color = colors[3];			} else {				color = colors[colorIdx];			}									tf = new TextFormat();			tf.align = TextFormatAlign.CENTER;			tf.size = size;			if(useDefault){				tf.font = 'Meiryo';			}else{			tf.font = myFont.fontName;						popup_text.embedFonts = true;			}			popup_text.defaultTextFormat = tf;			popup_text.textColor = color;			popup_text.text = txt;			popup_text.width = 350;			popup_text.height = 120;			popup_text.x = - popup_text.width/2;			popup_text.y = - popup_text.height/2;						addChild(popup_text);			this.alpha = 0;						addEventListener(Event.ADDED_TO_STAGE, animate);		}				public function animate(e:Event):void {			removeEventListener(Event.ADDED_TO_STAGE, animate);						Tween24.serial(				Tween24.parallel(					Tween24.tween(this, 0.6).alpha(1),					Tween24.tween(this, 0.5, Tween24.ease.BackOut).$y(-30)				),				Tween24.tween(this, 0.2).alpha(0)			).play();		}	}	}